@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model List<WebMVC.Areas.Client.Models.CartItemViewModel>

@{
    Layout = "_Layout";
}

<div class="container my-5">
    <h2>Your Shopping Cart</h2>

    <div id="cart-content">
        @await Html.PartialAsync("_CartTable", Model)
    </div>
</div>

@section Scripts {
        <script>
                

                $(document).on("click", ".remove-btn", function () {
                    console.log("Remove button clicked");
                    const row = $(this).closest("tr");

                    const productId = row.data("id");
                    console.log("productId",productId);

                    const size = row.data("size");
                    console.log("size",size);

                    const optionid = row.data("optionid");
                    console.log("optionid",optionid);

                    let cart = JSON.parse(localStorage.getItem("cart") || "[]");
                    console.log("cart",cart);

        cart = cart.filter(item => !(item.productId === productId && item.optionid === optionid));
                    localStorage.setItem("cart", JSON.stringify(cart));
                    console.log("cart after Delete",JSON.parse(localStorage.getItem("cart") || "[]"));
                    location.reload();
                });

                $(document).on("click", "#update-cart", function () {
                    const rows = $("tbody tr");
                    let cart = [];

                    rows.each(function () {
                        const row = $(this);
                        const productId = row.data("id");
                        const optionid = row.data("optionid");
                        const quantity = parseInt(row.find(".quantity-input").val());
                        console.log(optionid,"optionid")
                        if (!isNaN(quantity) && quantity > 0) {
                        cart.push({ productId, optionid, quantity });
                        }
                    });
                    console.log(cart,"cart updated")
                    localStorage.setItem("cart", JSON.stringify(cart));
                    location.reload();
                });
        </script>
}